"use strict";var precacheConfig=[["/the-emoji-compass/index.html","bea0b92185b3cc82b74cd68822e49139"],["/the-emoji-compass/static/css/main.d709f45f.css","2a58c74e693449164cf47949174e6e44"],["/the-emoji-compass/static/js/main.75c1f4fd.js","a3ef0060a7ac13b8b6d7571decdacd97"],["/the-emoji-compass/static/media/BerkshireSwash-Regular.e22a9a65.woff2","e22a9a654fb30c0cfe84965fccd68dee"],["/the-emoji-compass/static/media/GentiumBookBasic-Bold.6c7eb476.woff2","6c7eb4762771218552f2cfab4f6ea837"],["/the-emoji-compass/static/media/GentiumBookBasic.3dd1b76a.woff2","3dd1b76a746fb41af03bb646fca0d5b5"],["/the-emoji-compass/static/media/arc_02_1.e362de5e.svg","e362de5e9205d76003e64c3318a7e370"],["/the-emoji-compass/static/media/arc_02_2.55cfd7c1.svg","55cfd7c17719598de05c5a8c010f8091"],["/the-emoji-compass/static/media/clock-hand-active.729fa70f.png","729fa70f2f455458e026d3686f2b3833"],["/the-emoji-compass/static/media/clock-hand-inactive.7bcc6c27.png","7bcc6c27fcf83e299b437fbf807feb35"],["/the-emoji-compass/static/media/clock-hand2-active.fbf92752.png","fbf927523ef72f12fb15cb1589aadb05"],["/the-emoji-compass/static/media/clock-hand2-inactive.ad933b4a.png","ad933b4a6257a91f5574913093bb323f"],["/the-emoji-compass/static/media/close_button_v01.234a91ed.svg","234a91ed93eb5ef3f1a9249bf6d28db0"],["/the-emoji-compass/static/media/compass_v00.5a9b114c.svg","5a9b114cf9dddca5fa9c4ea9a3628596"],["/the-emoji-compass/static/media/share_button_v01.185b9c34.svg","185b9c3448b013ebeb3845c010f23bb8"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var c="/the-emoji-compass/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});